USER SYMBOL by DSCH 3.5
DATE 4/28/2017 3:46:37 PM
SYM  #ArithmeticUnit
BB(0,0,40,110)
TITLE 10 -7  #ArithmeticUnit
MODEL 6000
REC(5,5,30,100)
PIN(0,90,0.00,0.00)EnableAlu
PIN(0,40,0.00,0.00)kbd2[1]
PIN(0,30,0.00,0.00)kbd2[2]
PIN(0,20,0.00,0.00)kbd2[3]
PIN(0,10,0.00,0.00)kbd2[4]
PIN(0,80,0.00,0.00)kbd1[1]
PIN(0,70,0.00,0.00)kbd1[2]
PIN(0,60,0.00,0.00)kbd1[3]
PIN(0,50,0.00,0.00)kbd1[4]
PIN(0,100,0.00,0.00)AddSub
PIN(40,10,2.00,1.00)IE_ALU[3]
PIN(40,20,2.00,1.00)IE_ALU[2]
PIN(40,30,2.00,1.00)IE_ALU[1]
PIN(40,40,2.00,1.00)IE_ALU[0]
PIN(40,50,2.00,1.00)Carry
LIG(0,90,5,90)
LIG(0,40,5,40)
LIG(0,30,5,30)
LIG(0,20,5,20)
LIG(0,10,5,10)
LIG(0,80,5,80)
LIG(0,70,5,70)
LIG(0,60,5,60)
LIG(0,50,5,50)
LIG(0,100,5,100)
LIG(35,10,40,10)
LIG(35,20,40,20)
LIG(35,30,40,30)
LIG(35,40,40,40)
LIG(35,50,40,50)
LIG(5,5,5,105)
LIG(5,5,35,5)
LIG(35,5,35,105)
LIG(35,105,5,105)
VLG module ArithmeticUnit( EnableAlu,kbd2[1],kbd2[2],kbd2[3],kbd2[4],kbd1[1],kbd1[2],kbd1[3],
VLG  kbd1[4],AddSub,IE_ALU[3],IE_ALU[2],IE_ALU[1],IE_ALU[0],Carry);
VLG  input EnableAlu,kbd2[1],kbd2[2],kbd2[3],kbd2[4],kbd1[1],kbd1[2],kbd1[3];
VLG  input kbd1[4],AddSub;
VLG  output IE_ALU[3],IE_ALU[2],IE_ALU[1],IE_ALU[0],Carry;
VLG  wire w7,w8,w11,w12,w13,w15,w16,w17;
VLG  wire w19,w20,w21,w23,w28,w29,w30,w31;
VLG  wire w32,w33,w34,w35,w36,w37,w38,w39;
VLG  wire w40,w41,w42,w43,w44,w45,w46,w47;
VLG  bufif1 #(1) bufif1_1(IE_ALU[3],w11,IE_ALU[1]);
VLG  bufif1 #(1) bufif1_2(IE_ALU[2],w15,IE_ALU[1]);
VLG  bufif1 #(2) bufif1_3(IE_ALU[1],w19,IE_ALU[1]);
VLG  bufif1 #(1) bufif1_4(IE_ALU[0],w23,IE_ALU[1]);
VLG  mux #(2) mux_5(w8,kbd2[4],w28,AddSub);
VLG  mux #(2) mux_6(w13,kbd2[3],w29,AddSub);
VLG  mux #(2) mux_7(w17,kbd2[2],w30,AddSub);
VLG  mux #(2) mux_8(w21,kbd2[1],w31,AddSub);
VLG  not #(1) inv_9(w29,kbd2[3]);
VLG  not #(1) inv_10(w30,kbd2[2]);
VLG  not #(1) inv_11(w31,kbd2[1]);
VLG  not #(1) inv_12(w28,kbd2[4]);
VLG  mux #(2) mux_13(w20,vss,vdd,AddSub);
VLG  xor #(9) xor2_1_14(w32,kbd1[4],w8);
VLG  nand #(9) nand2_2_15(w33,kbd1[4],w7);
VLG  nand #(9) nand2_3_16(w34,w8,kbd1[4]);
VLG  xor #(9) xor2_4_17(w11,w32,w7);
VLG  nand #(9) nand3_5_18(Carry,w34,w35,w33);
VLG  nand #(9) nand2_6_19(w35,w8,w7);
VLG  xor #(9) xor2_1_20(w36,kbd1[3],w13);
VLG  nand #(9) nand2_2_21(w37,kbd1[3],w12);
VLG  nand #(9) nand2_3_22(w38,w13,kbd1[3]);
VLG  xor #(9) xor2_4_23(w15,w36,w12);
VLG  nand #(10) nand3_5_24(w7,w38,w39,w37);
VLG  nand #(9) nand2_6_25(w39,w13,w12);
VLG  xor #(9) xor2_1_26(w40,kbd1[2],w17);
VLG  nand #(9) nand2_2_27(w41,kbd1[2],w16);
VLG  nand #(9) nand2_3_28(w42,w17,kbd1[2]);
VLG  xor #(9) xor2_4_29(w19,w40,w16);
VLG  nand #(10) nand3_5_30(w12,w42,w43,w41);
VLG  nand #(9) nand2_6_31(w43,w17,w16);
VLG  xor #(9) xor2_1_32(w44,kbd1[1],w21);
VLG  nand #(9) nand2_2_33(w45,kbd1[1],w20);
VLG  nand #(9) nand2_3_34(w46,w21,kbd1[1]);
VLG  xor #(9) xor2_4_35(w23,w44,w20);
VLG  nand #(10) nand3_5_36(w16,w46,w47,w45);
VLG  nand #(9) nand2_6_37(w47,w21,w20);
VLG endmodule
FSYM
